#!/usr/bin/env perl
$| = 1;
use warnings;
use strict;
use Time::HiRes qw ( time alarm sleep );
open( my $out, '>', '/tmp/sleep.log' ) or die 'Unable to open /tmp/sleep.log for output';

my $alarm = 6 * 3600;
my $starttime = time;

use lib '/usr/lib/perl5';
use Term::ReadKey;
use lib '/usr/lib/perl5';
use Shiloh::Eee::Sound::Mixer;
use ConfigReader::Simple;

my $config = ConfigReader::Simple->new('/etc/shiloh/audio-sleep.conf');
warn "Could not read config! $ConfigReader::Simple::ERROR\n"
    if defined ( $ConfigReader::Simple::ERROR );

my $LOCAL_DATABASE = $config->get('LOCAL_DATABASE');
my $MAX_VOLUME = $config->get('MAX_VOLUME');
my $MIN_VOLUME = $config->get('MIN_VOLUME');
my $VOLUME_STEP = $config->get('VOLUME_STEP');
my $LOWER_LIMIT = $config->get('LOWER_LIMIT');
my $KEYPRESS_WAIT = $config->get('KEYPRESS_WAIT');
my $TIMER_INTERVAL = $config->get('TIMER_INTERVAL');

my $mixer = Mixer->new();

# Timer related variables
my $old_time = time;
my $timer = 0;

ReadMode 4;    # Turn off controls keys

my $volume = $MAX_VOLUME;
$mixer->volume($volume);
while (1) {
    if ( ( time - $starttime ) > $alarm ) {
	&wakeup;
    } 
    my $key = ReadKey(-1);
    if ( defined($key) ) {
	my $date = `date`;
	chomp $date;
	print $out "$date";
	if ( $key eq 'q' ) {
	    print $out '=> quit';
	    ReadMode 1;    # Change to cooked mode.
	    exit;
	}
	print $out ",$volume";
	$volume+= $VOLUME_STEP;
	$volume = $LOWER_LIMIT if $volume < $MIN_VOLUME;
	$volume = $MAX_VOLUME if $volume > $MAX_VOLUME;
	$mixer->volume($volume);
	print $out ",$volume\n";
	&say_time;
    }
    my $status = &reset_timer;
    if ($status eq 'timeout') {
	$volume-- if ($volume > 1);
	$volume = $MAX_VOLUME if $volume > $MAX_VOLUME;
	$volume = $MIN_VOLUME if $MIN_VOLUME < 0;
	$mixer->volume($volume);
    }
    select ( undef, undef, undef, $KEYPRESS_WAIT );
}

sub reset_timer {
    my $last_time = shift;
    if ( (time - $old_time) > ($TIMER_INTERVAL) ) {
	$old_time = time;
	print '+';
	return 'timeout';
    } else {
	print '-';
	return '-';
    }
}

sub wakeup {
        ReadMode 1;
	for (0..50) {
		$mixer->volume($_);
		sleep 30;
	}
	sleep 300;
	exit;
}

sub say_time {
    print `date`;
}
